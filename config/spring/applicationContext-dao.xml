<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd">


	<!-- 配置userDao <bean id="userDao" class="com.hengtian.dao.UserDaoImpl"> 
		<property name="sqlSessionFactory" ref="sqlSessionFactory" /> </bean> -->

	<!-- 配置扫描方式的代理的userDao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 要扫描的路径，多个时用半角逗号分隔 -->
		<property name="basePackage" value="com.hengtian.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<!-- 配置mail.properties -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:mail.properties</value>
		</property>
	</bean>

	<!-- 配置javamail -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>smtp.163.com</value>
		</property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>
			</props>
		</property>
		<property name="username">
			<value>tianhengyanzheng@163.com</value>
		</property>
		<property name="password">
			<value>wangyiyouxiang</value>
		</property>
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
	</bean>
	
	<!-- this is a template message that we can pre-load with default state 
	<bean id="templateMessage" class="org.springframework.mail.MimeMessage">
		<property name="from" value="tianhengyanzheng@163.com"/>
		<property name="subject" value="Active Account" />
	</bean> -->
	
	<bean id="mailUtil" class="com.hengtian.utils.MailUtil">
		<property name="mailSender" ref="mailSender" />
<!-- 		<property name="templateMessage" ref="templateMessage" /> -->
	</bean>



</beans>